[0]	global @maxn = alloc i32, 10010
[1]	global @n = alloc i32, zeroinit
[2]	global @a = alloc [i32, 10010], zeroinit
[3]	fun @ReadInt(): i32 {
[4]	%ReadInt_entry:
[5]	    %1 = alloc i32
[6]	    %2 = call @getch()
[7]	    store %2, %1
[8]	
[9]	%mc_while_start3:
[10]	    %4 = load %1
[11]	    %5 = 57
[12]	    %6 = > %4, %5
[13]	    %7 = load %1
[14]	    %8 = 48
[15]	    %9 = < %7, %8
[16]	    %10 = || %6, %9
[17]	    %11 = load %1
[18]	    %12 = 45
[19]	    %13 = != %11, %12
[20]	    %14 = && %10, %13
[21]	    br %14, %mc_while_body3, %mc_while_end3
[22]	
[23]	%mc_while_body3:
[24]	    %15 = call @getch()
[25]	    store %15, %1
[26]	    jump %mc_while_start3
[27]	
[28]	%mc_while_end3:
[29]	    %16 = alloc i32
[30]	    %17 = 0
[31]	    store %17, %16
[32]	    %18 = alloc i32
[33]	    %19 = 1
[34]	    store %19, %18
[35]	
[36]	%mc_while_start20:
[37]	    %21 = load %1
[38]	    %22 = 48
[39]	    %23 = >= %21, %22
[40]	    %24 = load %1
[41]	    %25 = 57
[42]	    %26 = <= %24, %25
[43]	    %27 = && %23, %26
[44]	    br %27, %mc_while_body20, %mc_while_end20
[45]	
[46]	%mc_while_body20:
[47]	    %28 = load %16
[48]	    %29 = 10
[49]	    %30 = mul %28, %29
[50]	    %31 = load %1
[51]	    %32 = add %30, %31
[52]	    %33 = 48
[53]	    %34 = sub %32, %33
[54]	    store %34, %16
[55]	    %35 = call @getch()
[56]	    store %35, %1
[57]	    jump %mc_while_start20
[58]	
[59]	%mc_while_end20:
[60]	    %36 = load %16
[61]	    %37 = load %18
[62]	    %38 = mul %36, %37
[63]	    ret %38
[64]	
[65]	}
[66]	
[67]	fun @PrintInt(@arg39: i32): i32 {
[68]	%PrintInt_entry:
[69]	    %39 = alloc i32
[70]	    store @arg39, %39
[71]	    %41 = load %39
[72]	    %42 = 0
[73]	    %43 = < %41, %42
[74]	    br %43, %mc_then40, %mc_else40
[75]	
[76]	%mc_then40:
[77]	    %44 = 45
[78]	    %45 = call @putch(%44)
[79]	    %46 = load %39
[80]	    %47 = - %46
[81]	    store %47, %39
[82]	    jump %mc_ifelse_end40
[83]	
[84]	%mc_else40:
[85]	
[86]	%mc_ifelse_end40:
[87]	    %49 = load %39
[88]	    %50 = 10
[89]	    %51 = >= %49, %50
[90]	    br %51, %mc_then48, %mc_else48
[91]	
[92]	%mc_then48:
[93]	    %52 = load %39
[94]	    %53 = 10
[95]	    %54 = div %52, %53
[96]	    %55 = call @PrintInt(%54)
[97]	    jump %mc_ifelse_end48
[98]	
[99]	%mc_else48:
[100]	
[101]	%mc_ifelse_end48:
[102]	    %56 = load %39
[103]	    %57 = 10
[104]	    %58 = % %56, %57
[105]	    %59 = 48
[106]	    %60 = add %58, %59
[107]	    %61 = call @putch(%60)
[108]	    %62 = 0
[109]	    ret %62
[110]	
[111]	}
[112]	
[113]	fun @main(): i32 {
[114]	%main_entry:
[115]	    %63 = call @ReadInt()
[116]	    store %63, @n
[117]	    %64 = alloc i32
[118]	    %65 = 1
[119]	    store %65, %64
[120]	
[121]	%mc_while_start66:
[122]	    %67 = load %64
[123]	    %68 = load @n
[124]	    %69 = <= %67, %68
[125]	    br %69, %mc_while_body66, %mc_while_end66
[126]	
[127]	%mc_while_body66:
[128]	    %70 = call @ReadInt()
[129]	    %71 = load %64
[130]	    @a._72_ = getelemptr @a, %71 // 类型：第一次 层数: 1
[131]	    store %70, @a._72_
[132]	    %73 = load %64
[133]	    %74 = 1
[134]	    %75 = add %73, %74
[135]	    store %75, %64
[136]	    jump %mc_while_start66
[137]	
[138]	%mc_while_end66:
[139]	    %76 = 1
[140]	    store %76, %64
[141]	
[142]	%mc_while_start77:
[143]	    %78 = load %64
[144]	    %79 = load @n
[145]	    %80 = <= %78, %79
[146]	    br %80, %mc_while_body77, %mc_while_end77
[147]	
[148]	%mc_while_body77:
[149]	    %82 = load %64
[150]	    @a.83 = getelemptr @a, %82 // 类型：第一次 层数: 1
[151]	    %81 = load @a.83
[152]	    %84 = call @PrintInt(%81)
[153]	    %85 = load %64
[154]	    %86 = 1
[155]	    %87 = add %85, %86
[156]	    store %87, %64
[157]	    %88 = 10
[158]	    %89 = call @putch(%88)
[159]	    jump %mc_while_start77
[160]	
[161]	%mc_while_end77:
[162]	    %90 = 0
[163]	    ret %90
[164]	
[165]	}
[166]	
